/*
 * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.wso2.carbon.identity.application.mgt.ui.client;

import org.apache.axis2.AxisFault;
import org.apache.axis2.client.Options;
import org.apache.axis2.client.ServiceClient;
import org.apache.axis2.context.ConfigurationContext;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.w3c.dom.Document;
import org.wso2.carbon.identity.application.common.model.idp.xsd.IdentityProviderProperty;
import org.wso2.carbon.identity.application.common.model.xsd.LocalAndOutboundAuthenticationConfig;
import org.wso2.carbon.identity.application.common.util.IdentityApplicationConstants;
import org.wso2.carbon.identity.core.util.IdentityUtil;
import org.wso2.carbon.idp.mgt.stub.IdentityProviderMgtServiceIdentityProviderManagementExceptionException;
import org.wso2.carbon.idp.mgt.stub.IdentityProviderMgtServiceStub;
import org.wso2.carbon.idp.mgt.util.IdPManagementConstants;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import java.io.StringWriter;
import java.rmi.RemoteException;

/**
 * Client for IdentityProviderManagementService.
 */
public class IdpManagementServiceClient {

    private static final Log log = LogFactory.getLog(IdpManagementServiceClient.class);

    private IdentityProviderMgtServiceStub idPMgtStub;

    /**
     * @param cookie           HttpSession cookie
     * @param backendServerURL Backend Carbon server URL
     * @param configCtx        Axis2 Configuration Context
     */
    public IdpManagementServiceClient(String cookie, String backendServerURL, ConfigurationContext configCtx) {

        String idPMgtServiceURL = backendServerURL + "IdentityProviderMgtService";
        try {
            idPMgtStub = new IdentityProviderMgtServiceStub(configCtx, idPMgtServiceURL);
        } catch (AxisFault axisFault) {
            log.error("Error while instantiating IdentityProviderMgtServiceStub", axisFault);
        }
        ServiceClient idPMgtClient = idPMgtStub._getServiceClient();
        Options idPMgtOptions = idPMgtClient.getOptions();
        idPMgtOptions.setManageSession(true);
        idPMgtOptions.setProperty(org.apache.axis2.transport.http.HTTPConstants.COOKIE_STRING,
                cookie);
    }

    public void addDefaultAuthenticationSequence(LocalAndOutboundAuthenticationConfig authenticationConfig)
            throws AxisFault {

        IdentityProviderProperty idpProperty = new IdentityProviderProperty();
        idpProperty.setName(IdPManagementConstants.IDP_PROPERTY_NAME_DEFAULT_AUTH_SEQ);
        idpProperty.setDisplayName(IdPManagementConstants.IDP_PROPERTY_DISPLAY_NAME_DEFAULT_AUTH_SEQ);
        idpProperty.setValues(authenticationConfig);
        try {
            idPMgtStub.addIDPMetadata(idpProperty, IdentityApplicationConstants.RESIDENT_IDP_RESERVED_NAME);
        } catch (RemoteException | IdentityProviderMgtServiceIdentityProviderManagementExceptionException e) {
            e.printStackTrace();
        }
    }
}
